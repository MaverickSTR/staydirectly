import { build } from "esbuild";

const result = await build({
  entryPoints: ["server/index.ts"],
  bundle: true,
  platform: "node",
  target: "node18",
  format: "esm",
  outfile: "dist/index.js",
  external: [
    // Node.js built-ins
    "fs",
    "path",
    "crypto",
    "http",
    "https",
    "url",
    "querystring",
    "os",
    "child_process",
    "cluster",
    "dgram",
    "dns",
    "net",
    "readline",
    "repl",
    "stream",
    "string_decoder",
    "tls",
    "tty",
    "util",
    "v8",
    "vm",
    "worker_threads",
    "zlib",
    "events",
    "assert",
    "buffer",
    "constants",
    "domain",
    "punycode",
    "timers",
    "tty",
    "querystring",
    "node:fs",
    "node:path",
    "node:crypto",
    "node:http",
    "node:https",
    "node:url",
    "node:querystring",
    "node:os",
    "node:child_process",
    "node:cluster",
    "node:dgram",
    "node:dns",
    "node:net",
    "node:readline",
    "node:repl",
    "node:stream",
    "node:string_decoder",
    "node:tls",
    "node:tty",
    "node:util",
    "node:v8",
    "node:vm",
    "node:worker_threads",
    "node:zlib",
    "node:events",
    "node:assert",
    "node:buffer",
    "node:constants",
    "node:domain",
    "node:punycode",
    "node:timers",

    // ALL npm packages should be external
    "express",
    "cors",
    "helmet",
    "morgan",
    "dotenv",
    "bcryptjs",
    "jsonwebtoken",
    "passport",
    "express-session",
    "express-rate-limit",
    "express-slow-down",
    "express-validator",
    "express-mongo-sanitize",
    "hpp",
    "memorystore",
    "connect-pg-simple",
    "ws",
    "pg",
    "drizzle-orm",
    "drizzle-orm/pg-core",
    "drizzle-zod",
    "zod",
    "@neondatabase/serverless",
    "stripe",
    "axios",
    "uuid",
    "date-fns",
    "i18n-iso-countries",
    "sitemap",

    // React and frontend dependencies
    "react",
    "react-dom",
    "@radix-ui/*",
    "framer-motion",
    "lucide-react",
    "react-hook-form",
    "@hookform/resolvers",
    "react-icons",
    "react-leaflet",
    "leaflet",
    "@vis.gl/react-google-maps",
    "@tanstack/react-query",
    "react-day-picker",
    "react-helmet-async",
    "react-resizable-panels",
    "react-swipeable",
    "react-zoom-pan-pinch",
    "recharts",
    "embla-carousel-react",
    "wouter",
    "class-variance-authority",
    "clsx",
    "tailwind-merge",
    "tailwindcss-animate",
    "cmdk",
    "vaul",
    "input-otp",
    "@stripe/react-stripe-js",
    "@stripe/stripe-js",
    "recharts",
    "sitemap",

    // Build tools
    "vite",
    "@vitejs/plugin-react",
    "autoprefixer",
    "postcss",
    "tailwindcss",
    "typescript",
    "ts-node",
    "tsx",
    "esbuild",
    "concurrently",
    "cross-env",
    "drizzle-kit",
    "@replit/*",
    "@tailwindcss/typography",

    // Dev dependencies
    "@types/*",
    "bufferutil",

    // Additional dependencies that might be bundled
    "compression",
    "serve-static",
    "cookie-parser",
    "body-parser",
    "multer",
    "express-fileupload",
    "express-ws",
    "socket.io",
    "ws",
    "uws",
    "engine.io",
    "primus",
    "sockjs",

    // Database related
    "mysql2",
    "mysql",
    "sqlite3",
    "better-sqlite3",
    "oracledb",
    "mongodb",
    "mongoose",
    "redis",
    "ioredis",
    "memcached",

    // File system and utilities
    "fs-extra",
    "glob",
    "chokidar",
    "watch",
    "nodemon",
    "pm2",
    "forever",
    "cluster",
    "worker_threads",

    // Testing and development
    "jest",
    "mocha",
    "chai",
    "sinon",
    "supertest",
    "cypress",
    "playwright",
    "puppeteer",
    "selenium-webdriver",

    // All other packages
    "*",
  ],
  sourcemap: false,
  minify: true,
  treeShaking: true,
  define: {
    "process.env.NODE_ENV": '"production"',
  },
  loader: {
    ".ts": "ts",
    ".js": "js",
  },
});

if (result.errors.length > 0) {
  console.error("Build errors:", result.errors);
  process.exit(1);
}

console.log("Server build completed successfully!");
